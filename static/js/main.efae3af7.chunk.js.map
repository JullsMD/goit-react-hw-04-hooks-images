{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","App.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Loader/Loader.module.css","Components/Searchbar/Searchbar.module.css","Services/API.js","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/Button/Button.jsx","App.js","index.js"],"names":["module","exports","API","fetchImages","a","searchQuery","page","axios","get","data","hits","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","ImageGalleryItem","webformatURL","largeImageURL","alt","openBigImg","src","ImageGalleryItemImg","onClick","ImageGallery","images","onSelect","map","image","tags","id","modalRoot","document","querySelector","Modal","handleCloseModalByBackdrop","target","props","onClose","handleCloseModalByEsc","code","window","addEventListener","this","removeEventListener","createPortal","overlay","modal","Component","Button","getImages","App","setPage","setImages","loading","setLoading","error","setError","showModal","setShowModal","setSearchQuery","selectedImg","setSelectedImg","useEffect","api","length","prevImages","scroll","scrollBy","top","documentElement","clientHeight","behavior","toggleModal","css","loader","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efae3af7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3XMSD\",\"ImageGalleryItemImg\":\"ImageGalleryItem_ImageGalleryItemImg__2vZqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__379Kb\",\"modal\":\"Modal_modal__3TTUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3aRpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3g0zv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Qk0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__17ZqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1FmNg\",\"SearchForm\":\"Searchbar_SearchForm__3zMLS\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2YzQD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__obaa-\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3XXGx\"};","import axios from 'axios';\n\nconst API_KEY = '21895237-aa305ef77d16e82934d36c66d';\nconst URL = 'https://pixabay.com/api/';\n\nconst fetchImages = async ({ searchQuery, page }) => {\n  const { data } = await axios.get(\n    `${URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return data.hits;\n};\n\nconst API = { fetchImages };\nexport default API;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Searchbar.module.css';\n// import toast, { Toaster } from 'react-hot-toast';\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // if (query.trim() === '') {\n    //   return toast.loading('Where is your query?', {\n    //     duration: 4000,\n    //     position: 'top-center',\n    //   });\n    // }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchFormButton}>\n          <span className={styles.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n          value={query}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  alt = '',\n  openBigImg,\n}) => {\n  return (\n    <li className={styles.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={alt}\n        className={styles.ImageGalleryItemImg}\n        onClick={() => openBigImg(largeImageURL)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n    openBigImg: PropTypes.func.isRequired,\n  }),\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, onSelect }) => {\n  return (\n    <ul className={styles.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          webformatURL={image.webformatURL}\n          largeImageURL={image.largeImageURL}\n          alt={image.tags}\n          openBigImg={onSelect}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  handleCloseModalByBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  handleCloseModalByEsc = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleCloseModalByEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleCloseModalByEsc);\n  }\n\n  render() {\n    return createPortal(\n      <div className={styles.overlay} onClick={this.handleCloseModalByBackdrop}>\n        <div className={styles.modal}>\n          <img src={this.props.largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nexport default Modal;\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n","import styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ getImages }) => {\n  return (\n    <button className={styles.Button} type=\"button\" onClick={getImages}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  getImages: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport API from './Services/API';\n\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Modal from './Components/Modal/Modal';\nimport Button from './Components/Button/Button';\nimport Loader from 'react-loader-spinner';\n// import toast, { Toaster } from 'react-hot-toast';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport css from './Components/Loader/Loader.module.css';\n\nfunction App() {\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedImg, setSelectedImg] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const fetchImages = async () => {\n      try {\n        const api = await API.fetchImages({ searchQuery, page });\n        if (api.length === 0) {\n          return setError(true);\n        }\n        setImages(prevImages => [...prevImages, ...api]);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchImages();\n  }, [searchQuery, page]);\n\n  const getImages = () => {\n    setLoading(true);\n    scroll();\n    setPage(page => page + 1);\n  };\n  const scroll = () => {\n    window.scrollBy({\n      top: document.documentElement.clientHeight - 160,\n      behavior: 'smooth',\n    });\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleSelectImage = image => {\n    setSelectedImg(image);\n    toggleModal();\n  };\n\n  const handleSubmit = query => {\n    setImages([]);\n    setSearchQuery(query);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n  };\n\n  return (\n    <>\n      {/* <Toaster /> */}\n      <Searchbar onSubmit={handleSubmit} />\n      {images.length > 0 && !error && (\n        <ImageGallery images={images} onSelect={handleSelectImage} />\n      )}\n\n      {/* {error && toast.error('Error')} */}\n      {loading && (\n        <Loader\n          className={css.loader}\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={1000}\n        />\n      )}\n\n      {!loading && images.length >= 12 && !error && (\n        <Button getImages={getImages} />\n      )}\n      {showModal && <Modal onClose={toggleModal} largeImageURL={selectedImg} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport styles from './App.module.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className={styles.App} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}