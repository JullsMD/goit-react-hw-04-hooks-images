{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","App.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Loader/Loader.module.css","Services/API.js","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/Button/Button.jsx","App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","API","fetchImages","searchQuery","page","axios","get","then","resp","data","hits","Searchbar","state","query","handleSubmit","e","preventDefault","trim","toast","loading","duration","position","props","onSubmit","setState","handleChange","currentTarget","value","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","alt","openBigImg","src","ImageGalleryItemImg","onClick","ImageGallery","images","onSelect","map","image","tags","id","modalRoot","document","querySelector","Modal","handleCloseModalByBackdrop","target","onClose","handleCloseModalByEsc","code","window","addEventListener","removeEventListener","createPortal","overlay","modal","Button","App","error","showModal","selectedImg","toggleModal","handleSelectImage","prevState","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","css","loader","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,oBAAsB,gD,mBCAtGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,oLCaZC,EADH,CAAEC,YARM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAClC,OAAOC,IACJC,IADI,UAHG,2BAGH,cAESH,EAFT,iBAE6BC,EAF7B,gBAJO,qCAIP,yDAIJG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,U,+BC2CbC,E,4MAhDbC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAAAC,GAEb,GADAA,EAAEC,iBAC8B,KAA5B,EAAKJ,MAAMC,MAAMI,OACnB,OAAOC,IAAMC,QAAQ,uBAAwB,CAC3CC,SAAU,IACVC,SAAU,eAGd,EAAKC,MAAMC,SAAS,EAAKX,MAAMC,OAC/B,EAAKW,SAAS,CAAEX,MAAO,M,EAGzBY,aAAe,SAAAV,GACb,EAAKS,SAAS,CACZX,MAAOE,EAAEW,cAAcC,S,4CAI3B,WACE,OACE,wBAAQC,UAAWC,IAAOlB,UAA1B,SACE,uBAAMiB,UAAWC,IAAOC,WAAYP,SAAUQ,KAAKjB,aAAnD,UACE,wBAAQkB,KAAK,SAASJ,UAAWC,IAAOI,iBAAxC,SACE,sBAAML,UAAWC,IAAOK,sBAAxB,sBAGF,uBACEN,UAAWC,IAAOM,gBAClBH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUR,KAAKN,aACfE,MAAOI,KAAKnB,MAAMC,iB,GAtCN2B,a,iBC2BTC,EA5BU,SAAC,GAKnB,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,cAGI,IAFJC,WAEI,MAFE,GAEF,EADJC,EACI,EADJA,WAEA,OACE,oBAAIjB,UAAWC,IAAOY,iBAAtB,SACE,qBACEK,IAAKJ,EACLE,IAAKA,EACLhB,UAAWC,IAAOkB,oBAClBC,QAAS,kBAAMH,EAAWF,S,iBCSnBM,EApBM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC9B,OACE,oBAAIvB,UAAWC,IAAOoB,aAAtB,SACGC,EAAOE,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,CAEEX,aAAcW,EAAMX,aACpBC,cAAeU,EAAMV,cACrBC,IAAKS,EAAMC,KACXT,WAAYM,GAJPE,EAAME,U,iBCJfC,EAAYC,SAASC,cAAc,eAkC1BC,E,4MA/BbC,2BAA6B,SAAA7C,GACvBA,EAAEW,gBAAkBX,EAAE8C,QACxB,EAAKvC,MAAMwC,W,EAIfC,sBAAwB,SAAAhD,GACP,WAAXA,EAAEiD,MACJ,EAAK1C,MAAMwC,W,uDAIf,WACEG,OAAOC,iBAAiB,UAAWnC,KAAKgC,yB,kCAG1C,WACEE,OAAOE,oBAAoB,UAAWpC,KAAKgC,yB,oBAG7C,WACE,OAAOK,uBACL,qBAAKxC,UAAWC,IAAOwC,QAASrB,QAASjB,KAAK6B,2BAA9C,SACE,qBAAKhC,UAAWC,IAAOyC,MAAvB,SACE,qBAAKxB,IAAKf,KAAKT,MAAMqB,cAAeC,IAAI,SAG5CY,O,GA5BchB,a,iBCIL+B,EARA,SAAC,GAAqB,IAAnBrE,EAAkB,EAAlBA,YAChB,OACE,wBAAQ0B,UAAWC,IAAO0C,OAAQvC,KAAK,SAASgB,QAAS9C,EAAzD,wB,0CCuFWsE,E,4MAhFb5D,MAAQ,CACNR,KAAM,EACN8C,OAAQ,GACR/B,SAAS,EACTsD,MAAO,KACPC,WAAW,EACXvE,YAAa,GACbwE,YAAa,I,EAiBfC,YAAc,WACZ,EAAKpD,UAAS,kBAAoB,CAChCkD,WADY,EAAGA,e,EAKnBG,kBAAoB,SAAAxB,GAClB,EAAK7B,SAAS,CAAEmD,YAAatB,IAC7B,EAAKuB,e,EAGP9D,aAAe,SAAAD,GACb,EAAKW,SAAS,CAAE0B,OAAQ,GAAI/C,YAAaU,EAAOT,KAAM,K,EAGxDF,YAAc,WACZ,MAA8B,EAAKU,MAA3BT,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAErB,EAAKoB,SAAS,CAAEL,SAAS,IACzBlB,EAAIC,YAAY,CAAEC,cAAaC,SAC5BG,MAAK,SAAAG,GACJ,EAAKc,UAAS,SAAAsD,GAAS,MAAK,CAC1B5B,OAAO,GAAD,mBAAM4B,EAAU5B,QAAhB,YAA2BxC,IACjCN,KAAM0E,EAAU1E,KAAO,SAG1B2E,OAAM,SAAAN,GAAK,OAAI,EAAKjD,SAAS,CAAEiD,OAAO,OACtCO,SAAQ,kBAAM,EAAKxD,SAAS,CAAEL,SAAS,Q,wDAzC5C,SAAmB8D,EAAWH,GAC5B,MAA8B/C,KAAKnB,MAA3BT,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAEjB0E,EAAU3E,cAAgBA,GAC5B4B,KAAK7B,cAEM,IAATE,GAAc0E,EAAU1E,OAASA,GACnC6D,OAAOiB,SAAS,CACdC,IAAK1B,SAAS2B,gBAAgBC,aAC9BC,SAAU,a,oBAmChB,WACE,MAAoDvD,KAAKnB,MAAjDsC,EAAR,EAAQA,OAAQ/B,EAAhB,EAAgBA,QAASwD,EAAzB,EAAyBA,YAAaD,EAAtC,EAAsCA,UACtC,OACE,qCACE,cAAC,EAAD,CAAWnD,SAAUQ,KAAKjB,eAC1B,cAAC,IAAD,IACCK,GACC,cAAC,IAAD,CACES,UAAW2D,IAAIC,OACfxD,KAAK,WACLyD,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAGb,cAAC,EAAD,CAAc1C,OAAQA,EAAQC,SAAUpB,KAAK8C,oBAC5C3B,EAAO2C,OAAS,GAAK,cAAC,EAAD,CAAQ3F,YAAa6B,KAAK7B,cAC/CwE,GACC,cAAC,EAAD,CAAOZ,QAAS/B,KAAK6C,YAAajC,cAAegC,W,GA1EzCnC,aCJlBsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKpE,UAAWC,IAAO2C,QAEzBf,SAASwC,eAAe,U,kBCV1BlG,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,sC","file":"static/js/main.78c3ee9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3XMSD\",\"ImageGalleryItemImg\":\"ImageGalleryItem_ImageGalleryItemImg__2vZqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__379Kb\",\"modal\":\"Modal_modal__3TTUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3aRpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3g0zv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Qk0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__17ZqH\"};","import axios from 'axios';\n\nconst API_KEY = '21895237-aa305ef77d16e82934d36c66d';\nconst URL = 'https://pixabay.com/api/';\n\nconst fetchImages = ({ searchQuery, page }) => {\n  return axios\n    .get(\n      `${URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(resp => resp.data.hits);\n};\n\nconst API = { fetchImages };\nexport default API;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.css';\r\nimport toast from 'react-hot-toast';\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.query.trim() === '') {\r\n      return toast.loading('Where is your query?', {\r\n        duration: 4000,\r\n        position: 'top-center',\r\n      });\r\n    }\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={this.state.query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  alt = '',\n  openBigImg,\n}) => {\n  return (\n    <li className={styles.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={alt}\n        className={styles.ImageGalleryItemImg}\n        onClick={() => openBigImg(largeImageURL)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n    openBigImg: PropTypes.func.isRequired,\n  }),\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, onSelect }) => {\n  return (\n    <ul className={styles.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          webformatURL={image.webformatURL}\n          largeImageURL={image.largeImageURL}\n          alt={image.tags}\n          openBigImg={onSelect}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  handleCloseModalByBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  handleCloseModalByEsc = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleCloseModalByEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleCloseModalByEsc);\n  }\n\n  render() {\n    return createPortal(\n      <div className={styles.overlay} onClick={this.handleCloseModalByBackdrop}>\n        <div className={styles.modal}>\n          <img src={this.props.largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nexport default Modal;\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n","import styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ fetchImages }) => {\n  return (\n    <button className={styles.Button} type=\"button\" onClick={fetchImages}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  fetchImages: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\r\nimport API from './Services/API';\r\n\r\nimport Searchbar from './Components/Searchbar/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\r\nimport Modal from './Components/Modal/Modal';\r\nimport Button from './Components/Button/Button';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport css from './Components/Loader/Loader.module.css';\r\nclass App extends Component {\r\n  state = {\r\n    page: 1,\r\n    images: [],\r\n    loading: false,\r\n    error: null,\r\n    showModal: false,\r\n    searchQuery: '',\r\n    selectedImg: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    if (prevState.searchQuery !== searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n    if (page !== 2 && prevState.page !== page) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  handleSelectImage = image => {\r\n    this.setState({ selectedImg: image });\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleSubmit = query => {\r\n    this.setState({ images: [], searchQuery: query, page: 1 });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n    API.fetchImages({ searchQuery, page })\r\n      .then(hits => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...hits],\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error: true }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  render() {\r\n    const { images, loading, selectedImg, showModal } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleSubmit} />\r\n        <Toaster />\r\n        {loading && (\r\n          <Loader\r\n            className={css.loader}\r\n            type=\"TailSpin\"\r\n            color=\"#00BFFF\"\r\n            height={80}\r\n            width={80}\r\n            timeout={5000} //3 secs\r\n          />\r\n        )}\r\n        <ImageGallery images={images} onSelect={this.handleSelectImage} />\r\n        {images.length > 0 && <Button fetchImages={this.fetchImages} />}\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} largeImageURL={selectedImg} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport styles from './App.module.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className={styles.App} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1FmNg\",\"SearchForm\":\"Searchbar_SearchForm__3zMLS\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2YzQD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__obaa-\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3XXGx\"};"],"sourceRoot":""}